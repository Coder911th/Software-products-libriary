-- MySQL Script generated by MySQL Workbench
-- Thu Dec 28 17:33:29 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema software_products_library
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema software_products_library
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `software_products_library` DEFAULT CHARACTER SET utf8 ;
USE `software_products_library` ;

-- -----------------------------------------------------
-- Table `software_products_library`.`categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `software_products_library`.`categories` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `software_products_library`.`developers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `software_products_library`.`developers` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `software_products_library`.`softwares`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `software_products_library`.`softwares` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `price` INT NOT NULL,
  `RAM` INT NOT NULL,
  `ROM` INT NOT NULL,
  `categories_id` INT NOT NULL,
  `developers_id` INT NOT NULL,
  PRIMARY KEY (`id`, `developers_id`),
  INDEX `fk_softwares_categories1_idx` (`categories_id` ASC),
  INDEX `fk_softwares_developers1_idx` (`developers_id` ASC),
  CONSTRAINT `fk_softwares_categories1`
    FOREIGN KEY (`categories_id`)
    REFERENCES `software_products_library`.`categories` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_softwares_developers1`
    FOREIGN KEY (`developers_id`)
    REFERENCES `software_products_library`.`developers` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `software_products_library`.`types`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `software_products_library`.`types` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `software_products_library`.`configurations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `software_products_library`.`configurations` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `types_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_configurations_types1_idx` (`types_id` ASC),
  CONSTRAINT `fk_configurations_types1`
    FOREIGN KEY (`types_id`)
    REFERENCES `software_products_library`.`types` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `software_products_library`.`requirements`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `software_products_library`.`requirements` (
  `softwares_id` INT NOT NULL,
  `configurations_id` INT NOT NULL,
  INDEX `fk_requirements_softwares1_idx` (`softwares_id` ASC),
  INDEX `fk_requirements_configurations1_idx` (`configurations_id` ASC),
  PRIMARY KEY (`softwares_id`, `configurations_id`),
  CONSTRAINT `fk_requirements_softwares1`
    FOREIGN KEY (`softwares_id`)
    REFERENCES `software_products_library`.`softwares` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_requirements_configurations1`
    FOREIGN KEY (`configurations_id`)
    REFERENCES `software_products_library`.`configurations` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

USE `software_products_library`;
DROP procedure IF EXISTS `new_procedure`;

DELIMITER $$
USE `software_products_library`$$
CREATE PROCEDURE `get_all_datasets` ()
BEGIN
	-- В эту переменную будем считывать id очередного types курсора cur_types
    DECLARE type_id INT;
   -- DECLARE done INT DEFAULT 0;
    
    /* Создаём курсор для всех типов конфигураций.
	   В нашем всего 3 типа конфигураций: OS, CPU и GPU, но 
       есть возможность расширить этот список */
    DECLARE cur_types CURSOR FOR SELECT id FROM types;
    
    /* Устанавливаем обработчик для отлавливания
       невозможности прочитать курсором новую строку */
    DECLARE EXIT HANDLER FOR SQLSTATE '02000' BEGIN END;
    
    -- Получаем наименования всего ПО, которое находится в базе
    SELECT name FROM softwares;
    
    -- Получаем наименования всех производителей ПО
	SELECT name FROM developers;
    
    -- Получаем наименования всех категорий
    SELECT name FROM categories;
	
    -- Открываем курсор
    open cur_types;
    
    WHILE TRUE DO
		-- Считали очередную строку (если прочитать не удалось, процедура будет завершена)
		FETCH cur_types INTO type_id;
        
        -- Добавлили ещё один dataset в вывод
		SELECT name FROM configurations
        WHERE types_id = type_id;
    END WHILE;
END$$

DELIMITER ;

INSERT INTO `types` VALUES (1,'OS'),(2,'CPU'),(3,'GPU');

INSERT INTO `categories` VALUES (7,'Games'),(8,'Office');

INSERT INTO `configurations` VALUES (31,'Windows 95',1),(32,'Windows 98',1),(33,'Windows NT 4.0',1),(34,'133 МГц',2),(35,'nVidia Riva TNT/ATI Rage 128 Pro',3),(36,'Windows 8.1 64 Bit',1),(37,'Windows 8 64 Bit',1),(38,'Windows 7 64 Bit Service Pack 1',1),(39,'Windows Vista 64 Bit Service Pack 2',1),(40,'AMD Phenom 9850 Quad-Core Processor 2.5GHz',2),(41,'Intel Core 2 Quad CPU Q6600 2.40GHz',2),(42,'NVIDIA 9800 GT 1GB',3),(43,'AMD HD 4870 1GB',3),(44,'Windows 7 64 Bit',1),(45,'Windows 10 64 Bit',1),(46,'Intel Core i3 2.5 GHz',2),(47,'AMD PHENOM II 2.6 GHz',2),(48,'AMD 5570',3),(49,'NVIDIA 450',3),(50,'Windows 2000',1),(51,'Windows XP',1),(52,'Pentium 233 MHz',2),(53,'Integrated video card',3),(54,'Windows 10',1),(55,'Windows 7',1),(56,'Windows 8',1),(57,'Windows Server 2008',1),(58,'Windows Server 2012',1),(59,'from 1 GHz with SSE2',2),(60,'3D adapter',3),(61,'Windows',1),(62,'Linux',1),(63,'OS X',1),(64,'AMD Athlon',2),(65,'Intel Pentium III',2),(66,'Intel Core i3',2),(67,'AMD Phenom X3 8650',2),(68,'NVIDIA GeForce GTX 460',3),(69,'ATI Radeon HD 4850',3),(70,'Intel HD Graphics 4400',3),(71,'Intel Core i3 6300 3.8GHz',2),(72,'AMD FX 8150 3.6GHz',2),(73,'NVIDIA GeForce GTX 750 Ti',3),(74,'AMD Radeon HD 7850',3);

INSERT INTO `developers` VALUES (7,'Valve'),(8,'Rockstar North'),(9,'Firaxis Games'),(10,'Microsoft'),(11,'The Document Foundation'),(12,'Blizzard Entertainment'),(13,'Ghost Games');

INSERT INTO `softwares` VALUES (2,'Half-Life',50,32,1800,7,7),(3,'GTA 5',40,4096,66560,7,8),(4,'Civilization VI',15,4096,12288,7,9),(5,'Microsoft Office 2003',190,64,245,8,10),(6,'Microsoft Office 2016',545,2048,3072,8,10),(7,'LibreOffice',0,256,1600,8,11),(8,'Overwatch',20,4096,30720,7,12),(9,'Need for Speed: Payback',50,6144,30720,7,13);

INSERT INTO `requirements` VALUES (2,31),(2,32),(2,33),(2,34),(2,35),(3,36),(3,37),(3,38),(3,39),(3,40),(3,41),(3,42),(3,43),(4,36),(4,44),(4,45),(4,46),(4,47),(4,48),(4,49),(5,50),(5,51),(5,52),(5,53),(6,54),(6,55),(6,56),(6,57),(6,58),(6,59),(6,60),(7,53),(7,61),(7,62),(7,63),(7,64),(7,65),(8,45),(8,55),(8,56),(8,66),(8,67),(8,68),(8,69),(8,70),(9,44),(9,71),(9,72),(9,73),(9,74);

